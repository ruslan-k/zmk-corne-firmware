/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <21 22>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 10>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        ru_layer_switch {
            bindings = <&tog 1>;
            key-positions = <36 38>;
            layers = <0>;
        };

        base_layer_switch {
            bindings = <&tog 0>;
            key-positions = <36 38>;
            layers = <1>;
        };

        l_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        r_shift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <34 33>;
        };

        ru_yo {
            bindings = <&kp RU_CYRILLIC_IO>;
            key-positions = <41 5>;
            layers = <1>;
        };

        ru_schya {
            bindings = <&kp RU_CYRILLIC_SHCHA>;
            key-positions = <41 8>;
            layers = <1>;
        };

        ru_hard_sign {
            bindings = <&kp RU_CYRILLIC_HARD_SIGN>;
            key-positions = <41 31>;
            layers = <1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            layers = <1 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O             &kp P              &trans
&trans  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K          &kp L             &kp TILDE          &trans
&trans  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp AMPERSAND  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
                      &kp LGUI  &mo 2  &kp SPACE    &kp SPACE  &mo 3  &kp RALT
            >;
        };

        russian_layer {
            bindings = <
&trans  &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp E               &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_ZE  &kp RU_CYRILLIC_HA   &trans
&trans  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE    &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE  &kp RU_CYRILLIC_ZHE  &trans
&trans  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I     &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU  &kp RU_CYRILLIC_E    &trans
                                                       &kp LGUI            &mo 2               &kp SPACE             &kp SPACE           &mo 3                      &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6           &kp N7    &kp N8    &kp N9     &kp N0   &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp PRINTSCREEN  &kp DOWN  &kp UP    &kp RIGHT  &trans   &trans
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6           &kp F7    &kp F8    &kp F9     &kp F10  &trans
                                    &kp LGUI      &trans        &kp SPACE       &kp RET          &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL   &kp AT    &kp HASH   &kp DLLR          &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &kp PG_UP  &kp UP    &kp PG_DN  &kp SINGLE_QUOTE  &kp TILDE    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans  &kp LEFT   &kp DOWN  &kp RIGHT  &kp DOT           &kp COMMA    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                             &kp LGUI   &trans            &kp SPACE    &kp SPACE  &trans     &kp RALT
            >;
        };
    };
};
