#include "behaviors.dtsi"
#include "dt-bindings/zmk/bt.h"
#include "dt-bindings/zmk/keys.h"
#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <13 14 15 16>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <19 20 21 22>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            hold-trigger-on-release;
        };
    };

    macros {
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        ru_yo {
            bindings = <&kp RU_CYRILLIC_IO>;
            key-positions = <5 40>;
            layers = <1>;
            timeout-ms = <50>;
        };

        ru_schya {
            bindings = <&kp RU_CYRILLIC_SHCHA>;
            key-positions = <8 40>;
            layers = <1>;
            timeout-ms = <50>;
        };

        ru_hard_sign {
            bindings = <&kp RU_CYRILLIC_HARD_SIGN>;
            key-positions = <31 40>;
            layers = <1>;
            timeout-ms = <50>;
        };

        ru_layer_switch {
            bindings = <&lm 1 LC(SPACE)>;
            key-positions = <39 40>;
        };

        en_layer_switch {
            bindings = <&lm 0 LC(SPACE)>;
            key-positions = <37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q            &kp W            &kp E                &kp R              &kp T        &kp Y      &kp U               &kp I                 &kp O             &kp P                 &none
&none  &hml LEFT_WIN A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G        &kp H      &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI TILDE  &none
&none  &kp Z            &kp X            &kp C                &kp V              &kp B        &kp N      &kp M               &kp AMPERSAND         &kp LESS_THAN     &kp GREATER_THAN      &none
                                         &kp BACKSPACE        &mo 2              &kp SPACE    &kp SPACE  &mo 3               &kp ENTER
            >;
        };

        ru {
            bindings = <
&none  &kp RU_CYRILLIC_SHORT_I       &kp RU_CYRILLIC_TSE             &kp RU_CYRILLIC_U                 &kp RU_CYRILLIC_KA             &kp RU_CYRILLIC_IE    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE             &kp RU_CYRILLIC_SHA                &kp RU_CYRILLIC_ZE             &kp RU_CYRILLIC_HA              &none
&none  &hml LEFT_WIN RU_CYRILLIC_EF  &hml LEFT_ALT RU_CYRILLIC_YERU  &hml LEFT_CONTROL RU_CYRILLIC_VE  &hml LEFT_SHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE    &kp RU_CYRILLIC_ER  &hmr RIGHT_SHIFT RU_CYRILLIC_O  &hmr RIGHT_CONTROL RU_CYRILLIC_EL  &hmr RIGHT_ALT RU_CYRILLIC_DE  &hmr RIGHT_GUI RU_CYRILLIC_ZHE  &none
&none  &kp RU_CYRILLIC_YA            &kp RU_CYRILLIC_CHE             &kp RU_CYRILLIC_ES                &kp RU_CYRILLIC_EM             &kp RU_CYRILLIC_I     &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN       &kp RU_CYRILLIC_BE                 &kp RU_CYRILLIC_YU             &kp RU_CYRILLIC_E               &none
                                                                     &kp BACKSPACE                     &mo 2                          &kp SPACE             &kp SPACE           &mo 3                           &kp ENTER
            >;
        };

        lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1        &kp N2        &kp N3         &kp N4             &kp N5             &kp N6      &kp N7                &kp N8                &kp N9   &kp N0   &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp K_MUTE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp F11  &kp F12  &none
&none  &kp F1        &kp F2        &kp F3         &kp F4             &kp F5             &kp F6      &kp F7                &kp F8                &kp F9   &kp F10  &none
                                   &kp BACKSPACE  &mo 2              &kp SPACE          &kp SPACE   &mo 3                 &kp ENTER
            >;
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL   &kp AT    &kp HASH       &kp DLLR           &kp PRCNT     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &kp PG_UP  &kp UP    &kp PG_DN      &kp DOUBLE_QUOTES  &kp TILDE2    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &none
&none  &kp LEFT   &kp DOWN  &kp RIGHT      &kp DOT            &kp COMMA     &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &none
                            &kp BACKSPACE  &mo 2              &kp SPACE     &kp SPACE  &mo 3      &kp ENTER
            >;
        };
    };
};
