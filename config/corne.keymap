#include "behaviors.dtsi"
#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 30 18 7 8 9 10 19 20 21 22 31 32 33 34 40 41 39>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38>;
        };
    };

    macros {
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&to MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&to MACRO_PLACEHOLDER>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            layers = <0 1>;
        };

        ru_layer_switch {
            bindings = <&lm 1 LG(LC(NUMBER_2))>;
            key-positions = <39 40>;
        };

        en_layer_switch {
            bindings = <&lm 0 LC(LG(NUMBER_1))>;
            key-positions = <37 38>;
        };

        fn_layer_switch {
            bindings = <&mo 5>;
            key-positions = <37 40>;
            timeout-ms = <200>;
        };

        switch_to_fn_layer {
            bindings = <&to 5>;
            key-positions = <40 7 8 6 9>;
            timeout-ms = <100>;
        };

        switch_to_game_layer {
            bindings = <&to 6>;
            key-positions = <37 5 4 3 2>;
            timeout-ms = <100>;
        };

        bt1 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <1 37 2 3>;
            timeout-ms = <200>;
        };

        bt2 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <37 13 14 15>;
            timeout-ms = <200>;
        };

        bt3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <37 25 26 27>;
            timeout-ms = <200>;
        };

        bt-clear {
            bindings = <&bt BT_CLR>;
            key-positions = <37 29 17 5>;
            timeout-ms = <200>;
        };

        bt-clear-all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <37 4 28 16>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            display-name = "en";
            bindings = <
&none  &kp Q            &kp W            &kp E                &kp R              &kp T        &kp Y          &kp U               &kp I                 &kp O             &kp P                 &none
&none  &hml LEFT_WIN A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G        &kp H          &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI TILDE  &none
&none  &kp Z            &kp X            &kp C                &kp V              &kp B        &kp N          &kp M               &kp LESS_THAN         &kp GREATER_THAN  &kp PIPE              &none
                                         &kp TAB              &mo 3              &kp SPACE    &kp BACKSPACE  &mo 2               &kp ENTER
            >;
        };

        ru {
            display-name = "ru";
            bindings = <
&none  &kp RU_CYRILLIC_SHORT_I       &kp RU_CYRILLIC_TSE             &kp RU_CYRILLIC_U                 &kp RU_CYRILLIC_KA             &kp RU_CYRILLIC_IE    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE             &kp RU_CYRILLIC_SHA                &kp RU_CYRILLIC_ZE             &kp RU_CYRILLIC_HA              &none
&none  &hml LEFT_WIN RU_CYRILLIC_EF  &hml LEFT_ALT RU_CYRILLIC_YERU  &hml LEFT_CONTROL RU_CYRILLIC_VE  &hml LEFT_SHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE    &kp RU_CYRILLIC_ER  &hmr RIGHT_SHIFT RU_CYRILLIC_O  &hmr RIGHT_CONTROL RU_CYRILLIC_EL  &hmr RIGHT_ALT RU_CYRILLIC_DE  &hmr RIGHT_GUI RU_CYRILLIC_ZHE  &none
&none  &kp RU_CYRILLIC_YA            &kp RU_CYRILLIC_CHE             &kp RU_CYRILLIC_ES                &kp RU_CYRILLIC_EM             &kp RU_CYRILLIC_I     &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN       &kp RU_CYRILLIC_BE                 &kp RU_CYRILLIC_YU             &kp RU_CYRILLIC_E               &none
                                                                     &kp TAB                           &mo 3                          &kp SPACE             &kp BACKSPACE       &mo 2                           &kp ENTER
            >;
        };

        hum_hi_ru {
            display-name = "hi_ru";
            bindings = <
&none  &kp EQUAL              &kp N1                  &kp NUMBER_2                &kp NUMBER_3        &kp RU_CYRILLIC_IO    &none  &none                           &kp RU_CYRILLIC_SHCHA              &none                          &none                           &none
&none  &hml LEFT_WIN RU_PLUS  &hml LEFT_ALT NUMBER_4  &hml LEFT_CONTROL NUMBER_5  &hml LEFT_SHIFT N6  &kp RU_ASTERISK       &none  &hmr RIGHT_SHIFT RU_CYRILLIC_O  &hmr RIGHT_CONTROL RU_CYRILLIC_EL  &hmr RIGHT_ALT RU_CYRILLIC_DE  &hmr RIGHT_GUI RU_CYRILLIC_ZHE  &none
&none  &kp RU_MINUS           &kp NUMBER_7            &kp NUMBER_8                &kp N9              &kp RU_SLASH          &none  &kp RU_CYRILLIC_HARD_SIGN       &none                              &none                          &none                           &none
                                                      &kp N0                      &kp RU_DOT          &kp SPACE             &none  &mo 2                           &kp ENTER
            >;

            label = "hum_hi_ru";
        };

        low_en {
            display-name = "low_en";
            bindings = <
&none  &kp N1            &kp N2               &kp N3                         &kp N4                 &kp N5           &kp N6         &kp N7                 &kp N8                   &kp N9               &kp N0                    &none
&none  &hml LGUI DQT     &hml LEFT_ALT PRCNT  &hml LEFT_CONTROL EXCLAMATION  &hml LEFT_SHIFT COLON  &kp SEMICOLON    &kp MINUS      &hmr RIGHT_SHIFT PLUS  &hmr RIGHT_CONTROL LBKT  &hmr RIGHT_ALT RBKT  &hmr RIGHT_GUI BACKSLASH  &none
&none  &kp SINGLE_QUOTE  &kp STAR             &kp QUESTION                   &kp DOT                &kp COMMA        &kp UNDER      &kp EQUAL              &kp LBRC                 &kp RBRC             &kp SLASH                 &none
                                              &kp DOLLAR                     &mo 3                  &kp SPACE        &kp BACKSPACE  &mo 2                  &kp ENTER
            >;

            label = "low_en";
        };

        low_ru {
            display-name = "low_ru";
            bindings = <
&none  &kp N1                          &kp N2               &kp N3                            &kp N4                    &kp N5              &kp N6         &kp N7                 &kp N8                   &kp N9               &kp N0                       &none
&none  &hml LEFT_WIN RU_DOUBLE_QUOTES  &hml LEFT_ALT PRCNT  &hml LEFT_CONTROL RU_EXCLAMATION  &hml LEFT_SHIFT RU_COLON  &kp RU_SEMICOLON    &kp MINUS      &hmr RIGHT_SHIFT PLUS  &hmr RIGHT_CONTROL LBKT  &hmr RIGHT_ALT RBKT  &hmr RIGHT_GUI RU_BACKSLASH  &none
&none  &kp SQT                         &kp RU_ASTRK         &kp RU_QUESTION                   &kp RU_DOT                &kp RU_COMMA        &kp UNDER      &kp EQUAL              &kp LBRC                 &kp RBRC             &kp RU_SLASH                 &none
                                                            &kp DOLLAR                        &mo 3                     &kp SPACE           &kp BACKSPACE  &mo 2                  &kp ENTER
            >;
        };

        fn {
            bindings = <
&none  &kp F1     &kp F2    &kp F3         &kp F4        &kp F5             &kp F6             &kp F7                   &kp F8                           &kp F9                           &kp F10             &none
&none  &kp PG_UP  &kp UP    &kp PAGE_DOWN  &kp HOME      &kp END            &kp K_PREVIOUS     &hmr RIGHT_SHIFT K_NEXT  &hmr RIGHT_CONTROL K_PLAY_PAUSE  &hmr RIGHT_ALT C_BRIGHTNESS_INC  &hmr RIGHT_GUI F11  &none
&none  &kp LEFT   &kp DOWN  &kp RIGHT      &kp CAPSLOCK  &kp PRINTSCREEN    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP          &kp K_MUTE                       &kp C_BRIGHTNESS_DEC             &kp F12             &none
                            &kp TAB        &mo 3         &kp SPACE          &kp BACKSPACE      &mo 2                    &kp LA(LC(LS(M)))
            >;

            label = "fn";
        };

        game {
            label = "game";
            bindings = <
&none  &kp LSHFT  &kp Q  &kp W    &kp E        &kp R        &none  &none  &none  &none  &none  &none
&none  &kp LCTRL  &kp A  &kp S    &kp D        &kp F        &none  &none  &none  &none  &none  &none
&none  &kp LALT   &kp Z  &kp X    &kp C        &kp V        &none  &none  &none  &none  &none  &none
                         &kp TAB  &lt 7 ENTER  &kp SPACE    &none  &none  &none
            >;
        };

        game_low {
            label = "game_l";
            bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp T  &kp Y      &none  &none  &none  &none  &none  &none
&none  &kp N4  &kp N5  &kp N6  &kp G  &kp H      &none  &none  &none  &none  &none  &none
&none  &kp N7  &kp N8  &kp N9  &kp B  &kp N      &none  &none  &none  &none  &none  &none
                       &kp N0  &none  &kp ESC    &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ru-low {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };
};
