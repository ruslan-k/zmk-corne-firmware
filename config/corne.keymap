#include "behaviors.dtsi"
#include "dt-bindings/zmk/bt.h"
#include "dt-bindings/zmk/keys.h"
#include "keys_ru.h"

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <13 14 15 16>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <19 20 21 22>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        ru_yo {
            bindings = <&ru_yo>;
            key-positions = <5 40>;
            layers = <1>;
            timeout-ms = <50>;
        };

        ru_schya {
            bindings = <&ru_shch>;
            key-positions = <8 40>;
            layers = <1>;
            timeout-ms = <50>;
        };

        ru_hard_sign {
            bindings = <&ru_hard>;
            key-positions = <31 40>;
            layers = <1>;
            timeout-ms = <50>;
        };

        ru_layer_switch {
            bindings = <&to 1>;
            key-positions = <39 40>;
        };

        en_layer_switch {
            bindings = <&to 0>;
            key-positions = <37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q         &kp W        &kp E          &kp R         &kp T        &kp Y      &kp U         &kp I          &kp O             &kp P              &none
&none  &hml LCTRL A  &hml LALT S  &hml LGUI D    &hml LSHFT F  &kp G        &kp H      &hmr RSHFT J  &hmr RGUI K    &hmr RALT L       &hmr RCTRL TILDE   &none
&none  &kp Z         &kp X        &kp C          &kp V         &kp B        &kp N      &kp M         &kp AMPERSAND  &kp LESS_THAN     &kp GREATER_THAN  &none
                                  &kp BACKSPACE  &mo 2         &kp SPACE    &kp SPACE  &mo 3         &kp ENTER
            >;
        };

        ru {
            bindings = <
&none  &ru_y              &ru_ts             &ru_u             &ru_k              &ru_ye       &ru_n      &ru_g              &ru_sh            &ru_z             &ru_kh              &none
&none  &mod_ru_f LCTRL 0  &mod_ru_bi LALT 0  &mod_ru_v LGUI 0  &mod_ru_a LSHFT 0  &ru_p        &ru_r      &mod_ru_o RSHFT 0  &mod_ru_l RGUI 0  &mod_ru_d RALT 0  &mod_ru_zh RCTRL 0  &none
&none  &ru_ya             &ru_ch             &ru_s             &ru_m              &ru_i        &ru_t      &ru_soft           &ru_b             &ru_yu            &ru_e               &none
                                             &kp BACKSPACE     &mo 2              &kp SPACE    &kp SPACE  &mo 3              &kp ENTER
            >;
        };

        lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1        &kp N2        &kp N3        &kp N4             &kp N5             &kp N6      &kp N7                &kp N8                &kp N9   &kp N0   &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp K_MUTE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp F11  &kp F12  &none
&none  &kp F1        &kp F2        &kp F3        &kp F4             &kp F5             &kp F6      &kp F7                &kp F8                &kp F9   &kp F10  &none
                                   &kp LGUI      &none              &kp SPACE          &kp RET     &none                 &kp RALT
            >;
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL   &kp AT    &kp HASH   &kp DLLR           &kp PRCNT     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &kp PG_UP  &kp UP    &kp PG_DN  &kp DOUBLE_QUOTES  &kp TILDE2    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &none
&none  &kp LEFT   &kp DOWN  &kp RIGHT  &kp DOT            &kp COMMA     &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &none
                            &kp LGUI   &none              &kp SPACE     &kp SPACE  &none      &kp RALT
            >;
        };
    };
};
